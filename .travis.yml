sudo: required
os:
  - linux
dist: trusty

services:
  - docker
branches:
  only:
    - master
    - recette
    - prod

language: node_js

node_js:
  - '12.16.1'

cache:
  directories:
    - node
    - node_modules
    - $HOME/.m2
env:
  global:
    - NODE_VERSION=12.16.1
    - SPRING_OUTPUT_ANSI_ENABLED=ALWAYS
    - SPRING_JPA_SHOW_SQL=false
    - JHI_DISABLE_WEBPACK_LOGS=true
    - NG_CLI_ANALYTICS="false"
    - MAVEN_USER_HOME=$HOME/.m2/repository/
    - PROJECT_VERSION="default"
before_install:
  - |
    if [[ $JHI_JDK = '8' ]]; then
      echo '*** Using OpenJDK 8'
    else
      echo '*** Using OpenJDK 11 by default'
      sudo add-apt-repository ppa:openjdk-r/ppa -y
      sudo apt-get update -q
      sudo apt-get install -y openjdk-11-jdk -y
      sudo update-java-alternatives -s java-1.11.0-openjdk-amd64
      java -version
    fi
  - java -version
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  - nvm install $NODE_VERSION
  - npm install -g npm
  - node -v
  - npm -v
install:
  - npm install
script:
  - chmod +x mvnw
  - ./mvnw -ntp checkstyle:check
  - ./mvnw -ntp clean verify
  - ./mvnw -ntp com.github.eirslett:frontend-maven-plugin:npm -Dfrontend.npm.arguments='run test' -Dmaven.repo.local=$MAVEN_USER_HOME
  - ./mvnw -ntp verify -Pprod -DskipTests

notifications:
  webhooks:
    on_success: change # options: [always|never|change] default: always
    on_failure: always # options: [always|never|change] default: always
    on_start: false # default: false

after_success:
  - mvn javadoc:javadoc
  - PROJECT_VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
  - bash <(curl -s https://codecov.io/bash) -t $CODECOV_TOKEN

deploy:
  - provider: script
    skip_cleanup: true
    keep_history: true
    script: bash docker_push.sh dev
    on:
      tags: false
      branch: master

  - provider: script
    skip_cleanup: true
    keep_history: true
    script: bash git_push.sh
    on:
      tags: false
      branch: master

  - provider: script
    skip_cleanup: true
    keep_history: true
    script: bash docker_push.sh prod
    on:
      tags: false
      branch: prod

  - provider: pages
    skip_cleanup: true
    local_dir: target/site
    github_token: '$GH_TOKEN'
    keep_history: true
    on:
      tags: false
      branch: master

after_failure:
  - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh failure $WEBHOOK_URL

after_deploy:
  - wget https://raw.githubusercontent.com/DiscordHooks/travis-ci-discord-webhook/master/send.sh
  - chmod +x send.sh
  - ./send.sh success $WEBHOOK_URL
